CREATE DATABASE PROJECT1
USE PROJECT1
--VIEWING THE DATASET
SELECT * FROM HR

--OVERALL ATTRITION HAPPENED IN THE COMPANY
SELECT COUNT(CASE WHEN ATTRITION = 'YES' THEN 1 END) AS ATTRITION_COUNT,
COUNT(*) TOTAL_EMPLOYEES
FROM HR

--PRESENCE OF OVERTIME AND CORRELATION IN ATTRITION
SELECT OVERTIME, COUNT (*) AS ATTRITION_COUNT
FROM HR
WHERE ATTRITION = 'YES'
GROUP BY OVERTIME;

--GENDER DISTRIBUTION IN THE COMPANY
SELECT GENDER, COUNT(*) AS TOTAL_EMPLOYEES
FROM HR
GROUP BY GENDER;

--ATTRITION BASED ON GENDER
SELECT GENDER, COUNT(*) AS TOTAL_ATTRITION
FROM HR
WHERE ATTRITION = 'YES'
GROUP BY GENDER;

--CHECKING IF THERE IS A NEGATIVE CORRELATION AMONGST PERFORMANCE RATING AND ATTRITION
SELECT * FROM HR
SELECT PERFORMANCERATING, COUNT(*) TOTAL_ATTRITION FROM HR
WHERE ATTRITION = 'YES'
GROUP BY PERFORMANCERATING;

--ATTRITION BASED ON DEPARTMENT WISE
SELECT DEPARTMENT, COUNT(*) TOTAL_ATTRITION FROM HR
WHERE ATTRITION = 'YES'
GROUP BY Department;


-- ATTRITION COUNT BASED ON THE JOB ROLES
SELECT DEPARTMENT, JOBROLE, COUNT(*) TOTAL_ATTRITION FROM HR
WHERE ATTRITION = 'YES'
GROUP BY DEPARTMENT, JOBROLE
ORDER BY TOTAL_ATTRITION DESC;

-- ATTRITION COUNT BASED ON DISTANCE FORM HOME VARIABLE
SELECT * FROM HR
SELECT DISTANCEFROMHOME, COUNT(*) TOTAL_ATTRITION FROM HR
WHERE ATTRITION = 'YES'
GROUP BY DISTANCEFROMHOME
ORDER BY TOTAL_ATTRITION  DESC;

-- RELATION OF SALARY AND ATTRITION -- NEGATIVE CORRELATION AMONGST SALARY HIKES AND ATTRITION
SELECT PERCENTSALARYHIKE, COUNT(*) TOTAL_ATTRITION FROM HR
WHERE ATTRITION = 'YES'
GROUP BY PERCENTSALARYHIKE
ORDER BY TOTAL_ATTRITION DESC;

-- EDUCATION FIELD IS RELATED TO ATTRITION COUNT OR NOT
SELECT EDUCATIONFIELD, COUNT(*) TOTAL_ATTRITION FROM HR
WHERE ATTRITION = 'YES'
GROUP BY EDUCATIONFIELD;

-- RELATION BETWEEN YEARS IN CURRENT ROLE AND ATTRITION COUNT
SELECT * FROM HR
SELECT YEARSINCURRENTROLE, COUNT(*) TOTAL_ATTRITION FROM HR
WHERE ATTRITION = 'YES'
GROUP BY YEARSINCURRENTROLE
ORDER BY TOTAL_ATTRITION DESC;

--CHANGING DATA TYPE
ALTER TABLE DBO.HR
ALTER COLUMN YEARSINCURRENTROLE INT 

--RELATION BETWEEN YEARS IN CURRENT ROLE AND ATTRITION COUNT
SELECT YEARSINCURRENTROLE, COUNT(CASE WHEN ATTRITION = 'YES' THEN 1 END) AS ATTRITION_COUNT FROM HR
WHERE YEARSINCURRENTROLE > (SELECT AVG(YEARSINCURRENTROLE) FROM HR)
GROUP BY YearsInCurrentRole
ORDER BY ATTRITION_COUNT DESC;
-- EMPLOYEES WHO ARE WORKING IN THE COMPANY FROM LAST 5-10 YEARS HAVE THE HIGHEST ATTRITION COUNT

-- JOB SATISFACTION AND MONTHLY INCOME
ALTER TABLE DBO.HR
ALTER COLUMN MONTHLYINCOME INT


SELECT JOBSATISFACTION, COUNT(*) ATTRITION_COUNT FROM HR
WHERE ATTRITION = 'YES' AND MONTHLYINCOME < (SELECT AVG(MONTHLYINCOME) FROM HR)
GROUP BY JOBSATISFACTION

-- MONTHLY INCOME PLAYS A VITAL ROLE IN ATTRITION COUNT IRRESPECTIVE THE SATISFACTION 
-- FROM THE JOB IS ON THE HIGHER SIDE


-- EMPLOYEE ATTRITION BASED ON THE AGE RANGE
SELECT CASE WHEN AGE <= 29 THEN '18-29'
WHEN AGE >= 30 AND AGE <= 39 THEN '30-39'
WHEN AGE >= 40 AND AGE <= 49 THEN '40-49'
WHEN AGE >= 50 AND AGE <= 59 THEN '50-59'
ELSE '60 OR OLDER'
END AS AGE_RANGE, COUNT(*) AS 'ATTRITION_AGE'
FROM HR
WHERE ATTRITION = 'YES' AND YEARSATCOMPANY >=1
GROUP BY CASE WHEN AGE <= 29 THEN '18-29'
WHEN AGE >= 30 AND AGE <= 39 THEN '30-39'
WHEN AGE >= 40 AND AGE <= 49 THEN '40-49'
WHEN AGE >= 50 AND AGE <= 59 THEN '50-59'
ELSE '60 OR OLDER'
END

--ATTRITION BASED ON DAILY RATE
SELECT MAX(DAILYRATE) AS 'MAX_DAILY_RATE' FROM HR
WHERE ATTRITION = 'YES';

SELECT MIN(DAILYRATE) AS 'MIN_DAILY_RATE' FROM HR
WHERE ATTRITION = 'YES';


--ATTRITION BASED ON MONTHLY RATE
SELECT MAX(MONTHLYRATE) AS 'MAX_MONTHALY_RATE' FROM HR
WHERE ATTRITION = 'YES';

SELECT MIN(MONTHLYRATE) AS 'MIN_MONTHALY_RATE' FROM HR
WHERE ATTRITION = 'YES';

--CHECKING THE ATTRITION BASED ON THE AVERAGE INCOMES 
--CHANGING COLUMN TYPE
ALTER TABLE DBO.HR
ALTER COLUMN DAILYRATE INT;

ALTER TABLE DBO.HR
ALTER COLUMN MONTHLYINCOME INT;

ALTER TABLE DBO.HR
ALTER COLUMN MONTHLYRATE INT;


SELECT COUNT(*) AS 'ATTRITION_COUNT'
FROM HR
WHERE ATTRITION = 'YES' AND DAILYRATE < (SELECT AVG(DAILYRATE) FROM HR) AND MONTHLYINCOME < (SELECT AVG(MONTHLYRATE) FROM HR) AND MONTHLYINCOME < (SELECT AVG(MONTHLYINCOME) FROM HR);

SELECT COUNT(*) AS 'ATTRITION_COUNT'
FROM HR
WHERE Attrition = 'YES' AND DailyRate < (SELECT AVG(DAILYRATE) FROM HR)

SELECT COUNT(*) AS 'ATTRITION_COUNT'
FROM HR
WHERE Attrition = 'YES' AND MonthlyRate < (SELECT AVG(MONTHLYRATE) FROM HR) 

SELECT COUNT(*) AS 'ATTRITION_COUNT'
FROM HR
WHERE Attrition = 'YES' AND MonthlyIncome < (SELECT AVG(MONTHLYINCOME) FROM HR);



SELECT ENVIRONMENTSATISFACTION, RELATIONSHIPSATISFACTION, COUNT(*) AS 'ATTRITION_COUNT' FROM HR
WHERE ATTRITION = 'YES' AND MONTHLYINCOME < (SELECT AVG(MONTHLYINCOME) FROM HR)
GROUP BY ENVIRONMENTSATISFACTION, RELATIONSHIPSATISFACTION
ORDER BY 'ATTRITION_COUNT' DESC;

--BASED ON MARTIAL STATUS
SELECT MARITALSTATUS, COUNT(*) ATTRITION_COUNT FROM HR
WHERE ATTRITION = 'YES'
GROUP BY MARITALSTATUS;
